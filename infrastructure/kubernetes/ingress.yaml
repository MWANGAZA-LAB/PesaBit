# PesaBit Kubernetes Ingress Configuration
# This configuration provides load balancing, SSL termination, and routing for production

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pesabit-ingress
  namespace: pesabit
  annotations:
    # NGINX Ingress Controller annotations
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # SSL/TLS configuration
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-RSA-AES128-GCM-SHA256,ECDHE-RSA-AES256-GCM-SHA384,ECDHE-RSA-AES128-SHA256,ECDHE-RSA-AES256-SHA384"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "DENY" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'none'; base-uri 'self'; form-action 'self'" always;
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://pesa.co.ke,https://app.pesa.co.ke"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    
    # Client body size limit
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    
    # Timeouts
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    
    # Load balancing
    nginx.ingress.kubernetes.io/upstream-hash-by: "$binary_remote_addr"
    
    # Monitoring
    nginx.ingress.kubernetes.io/enable-access-log: "true"
    nginx.ingress.kubernetes.io/enable-rewrite-log: "true"
    
spec:
  tls:
    - hosts:
        - api.pesa.co.ke
        - app.pesa.co.ke
      secretName: pesabit-tls-secret
  
  rules:
    # API Gateway routing
    - host: api.pesa.co.ke
      http:
        paths:
          # Health check endpoint
          - path: /health
            pathType: Exact
            backend:
              service:
                name: pesabit-api-gateway
                port:
                  number: 3000
          
          # API v1 endpoints
          - path: /v1
            pathType: Prefix
            backend:
              service:
                name: pesabit-api-gateway
                port:
                  number: 3000
          
          # API documentation
          - path: /docs
            pathType: Prefix
            backend:
              service:
                name: pesabit-api-gateway
                port:
                  number: 3000
          
          # Metrics endpoint (internal only)
          - path: /metrics
            pathType: Exact
            backend:
              service:
                name: pesabit-api-gateway
                port:
                  number: 3000
    
    # Frontend application routing
    - host: app.pesa.co.ke
      http:
        paths:
          # Frontend application
          - path: /
            pathType: Prefix
            backend:
              service:
                name: pesabit-frontend
                port:
                  number: 80
          
          # API proxy for frontend
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: pesabit-api-gateway
                port:
                  number: 3000

---
# Certificate issuer for Let's Encrypt
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: admin@pesa.co.ke
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
      - http01:
          ingress:
            class: nginx

---
# Certificate issuer for staging
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: admin@pesa.co.ke
    privateKeySecretRef:
      name: letsencrypt-staging
    solvers:
      - http01:
          ingress:
            class: nginx

---
# Network policy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pesabit-network-policy
  namespace: pesabit
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # Allow ingress from NGINX ingress controller
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
      ports:
        - protocol: TCP
          port: 3000
        - protocol: TCP
          port: 80
    # Allow internal communication
    - from:
        - namespaceSelector:
            matchLabels:
              name: pesabit
      ports:
        - protocol: TCP
          port: 3000
        - protocol: TCP
          port: 8001
        - protocol: TCP
          port: 8002
        - protocol: TCP
          port: 5432
        - protocol: TCP
          port: 6379
  egress:
    # Allow DNS resolution
    - to: []
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
    # Allow HTTPS outbound
    - to: []
      ports:
        - protocol: TCP
          port: 443
    # Allow HTTP outbound (for Let's Encrypt)
    - to: []
      ports:
        - protocol: TCP
          port: 80
    # Allow internal communication
    - to:
        - namespaceSelector:
            matchLabels:
              name: pesabit
      ports:
        - protocol: TCP
          port: 3000
        - protocol: TCP
          port: 8001
        - protocol: TCP
          port: 8002
        - protocol: TCP
          port: 5432
        - protocol: TCP
          port: 6379

---
# Pod disruption budget for high availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: pesabit-api-gateway-pdb
  namespace: pesabit
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: pesabit-api-gateway

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: pesabit-user-service-pdb
  namespace: pesabit
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: pesabit-user-service

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: pesabit-payment-service-pdb
  namespace: pesabit
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: pesabit-payment-service
